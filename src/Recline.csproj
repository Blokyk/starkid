<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net7;netstandard2.0</TargetFrameworks>
    <!-- ðŸ‘‡ We don't want to reference the source generator dll directly in consuming projects -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <NoWarn>$(NoWarn),RS1024,RS2008,IDE0046,IDE1006</NoWarn>
    <NoWarn>$(NoWarn),RS1035</NoWarn> <!-- Father forgive me, for I have sinned -->
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.6.0" PrivateAssets="all" />
    <!-- *Generator* to polyfill some features from after .netstandard2 -->
    <PackageReference Include="PolySharp" Version="1.12.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <None Include="$(OutputPath)$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <Using Remove="System.IO" />
    <Using Include="System.Text" />
    <Using Include="System.Collections.Immutable" />
    <Using Include="System.Diagnostics.CodeAnalysis" />
    <Using Include="Microsoft.CodeAnalysis" />
    <Using Include="Microsoft.CodeAnalysis.Text" />
    <Using Include="Microsoft.CodeAnalysis.CSharp" />
    <Using Include="Microsoft.CodeAnalysis.CSharp.Syntax" />
  </ItemGroup>
</Project>